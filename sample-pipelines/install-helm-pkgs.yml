---
- hosts: localhost

  vars:
    usrBin: '/usr/bin'
    helmVersion: '3.5.1-1'
    localBin: '/usr/local/bin'
    stagingDir: '/tmp/instImages'

  tasks:

    - name: Create GitLab-Runner Dir
      file:
        dest: "{{ item.dst  }}"
        state: directory
        owner: root
        group: root
        mode: "{{ item.mode }}"
      with_items:
        - { dst: '{{ stagingDir }}', mode: '0755' }
    #
    # - name: Download Infra Code Packages
    #   get_url:
    #     url: "{{ item.url }}"
    #     dest: "{{ item.dest }}"
    #     mode: " {{ item.mode }}"
    #   with_items:
    #     - { url: 'https://github.com/gruntwork-io/terragrunt/releases/download/v0.25.5/terragrunt_linux_amd64', dest: '{{ localBin }}/terragrunt', mode: '0755' }
    #     - { url: 'https://releases.hashicorp.com/terraform/0.13.5/terraform_0.13.5_linux_amd64.zip', dest: '{{ stagingDir }}', mode: '0755' }
    #   tags: ['installInfraCodePackages']
    #
    # - name: "Unarchive {{ item }}"
    #   unarchive:
    #     src: "{{ item }}"
    #     dest: "{{ localBin }}"
    #     mode: 0755
    #   loop:
    #     - "{{ stagingDir }}/terraform_0.13.5_linux_amd64.zip"

    - name: Add Helm GPG Key
      apt_key:
        url:  https://baltocdn.com/helm/signing.asc
        state: present

    - name: Add Helm Repository
      apt_repository:
        repo: deb https://baltocdn.com/helm/stable/debian/ all main
        state: present
        update_cache: yes

    - name: Apt install Helm
      apt:
        name:
          - helm
        update_cache: yes

    - name: Check if {{ usrBin }}/helm Binary exists.
      stat:
        path: "{{ usrBin }}/helm"
      register: helmBinary

    - name: Install helm plugins
      shell: |
        helm plugin install {{ item }}
      ignore_errors: true
      args:
        warn: true
      with_items:
        - 'https://github.com/databus23/helm-diff'
        - 'https://github.com/zendesk/helm-secrets'
      when: helmBinary.stat.exists

    # - name: Initialize kubectl
    #   become_user: gitlab-runner
    #   shell: |
    #     gcloud container clusters get-credentials atomyze-acn --region europe-west4 --project atomyze-acn
    #     kubectl config rename-context gke_atomyze-acn_europe-west4_atomyze-acn atomyze-acn

    - name: Download fluxcdIO Install Binary
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: " {{ item.mode }}"
      with_items:
        - { url: ' https://toolkit.fluxcd.io/install.sh', dest: '{{ stagingDir }}/fluxcdIO.sh', mode: '0755' }
      tags: ['installFlixcdIO']

    - name: Install fluxcdIO
      shell: |
        "{{ stagingDir }}/fluxcdIO.sh"
      ignore_errors: true
      args:
        warn: false

    - name: Add HashiCorp GPG Key
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present

    - name: Add HasiCorp Package Repo
      apt_repository:
        repo: deb https://apt.releases.hashicorp.com {{ansible_distribution_release}}  main
        state: present
        update_cache: yes

    - name: Install HashiCorp Terraform
      apt:
        pkg:
          - terraform
        autoremove: yes
        state: present
