---
- hosts: localhost

  vars:
    gitlabciUrl: "http://{{ ansible_fqdn }}:80"
    # gitlabAccessToken: 'kY8-vieiC4p4ky_TBcnw'

  tasks:

     - set_fact:
         gitlabAccessToken: "{{ lookup('password', '/dev/null length=20')}}"

     - debug:
         msg: "{{ gitlabAccessToken }}"

     - name: Create Personal Access Token
       shell: |
         gitlab-rails runner "token = User.find_by_username('root').personal_access_tokens.create(scopes: \
         [:api, :sudo], name: 'AdminAPIToken'); token.set_token('{{ gitlabAccessToken }}'); token.save!"
       ignore_errors: yes
       args:
         warn:
           true
       async: 45
       poll: 9
       register: gitlabCItoken

     - name: Disable WebUI SignIn
       shell: |
         curl -v --request PUT --header "PRIVATE-TOKEN: {{ gitlabAccessToken }}" \
           "{{ gitlabciUrl }}/api/v4/application/settings?signup_enabled=false&default_project_visibility=internal"
       ignore_errors: true
       args:
         warn: false


# curl --request PUT --header "PRIVATE-TOKEN: h17hjh1XM0NGxvmB3H9:" "http://localhost:80/api/v4/application/settings?signup_enabled=false&default_project_visibility=internal"
# curl --request PUT --header "PRIVATE-TOKEN: h17hjh1XM0NGxvmB3H9:" "http://localhost:80/api/v4/application/settings?signup_enabled=false&default_project_visibility=internal"
     - name: Disable WebUI SignIn
       uri:
         url: "{{ gitlabciUrl }}/api/v4/application/settings"
         method: POST
         validate_certs: no
         headers:
           Authorization: "Bearer {{ gitlabAccessToken }}"
           Content-Type: "application/json"
         body: { "signup_enabled": "false", "default_project_visibility": "internal" }
         body_format: json
         return_content: yes

     # - debug:
     #     msg: "{{ gitlabAccessToken }}"
     #
     # - name: Create GitLab Group
     #   uri:
     #     url:  "{{ gitlabciUrl }}/api/v4/groups"
     #     validate_certs: no
     #     method: POST
     #     headers:
     #       Authorization: "Bearer {{ gitlabAccessToken }}"
     #       Content-Type: "application/json"
     #     body: "{{ item }}"
     #     body_format: json
     #     status_code: [201, 200]
     #     return_content: yes
     #   with_items:
     #     - { "name": "terraform", "path": "terraform", "description": "IaC  management Repo" }
     #     - { "name": "devops", "path": "devops", "description": "DevOps management Repo" }
     #
     # - debug:
     #     msg: "Verifying the token is the same ==> {{ gitlabAccessToken }}"



     #==========================================================================
     #
     # - name: Create GitLab Group
     #   uri:
     #     url: "{{ gitlabciUrl }}/api/v4/groups"
     #     validate_certs: no
     #     client_key: '/etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.key'
     #     client_cert: '/etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.crt'
     #     method: POST
     #     headers:
     #       PRIVATE_TOKEN: '{{ gitlabAccessToken }}'
     #       Content-Type: "application/json"
     #     body: "{{ lookup('file','terraform.json') }}"
     #     body_format: json
     #     status_code: 204
     #     force_basic_auth: yes
     #     return_content: yes
     #
     #==========================================================================


     - name: Revoke Personal Access Token
       shell: |
         gitlab-rails runner "PersonalAccessToken.find_by_token('{{ gitlabAccessToken }}').revoke!"
       ignore_errors: yes
       args:
         warn:
           true
       async: 45
       poll: 9
