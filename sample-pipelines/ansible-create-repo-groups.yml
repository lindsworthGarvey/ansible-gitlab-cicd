---
- hosts: localhost

  vars:
    gitlabciUrl: "https://{{ ansible_fqdn }}:443"
    gitlabAccessToken: "JWFaYj_wrsqkvNU9obFx"

  tasks:

     - set_fact:
         gitlabAccessToken: "{{ lookup('password', '/dev/null length=20')}}"

     - debug:
         msg: "{{ gitlabAccessToken }}"

     - name: Create Personal Access Token
       shell: |
         gitlab-rails runner "token = User.find_by_username('root').personal_access_tokens.create(scopes: \
         [:api, :sudo], name: 'AdminAPIToken'); token.set_token('{{ gitlabAccessToken }}'); token.save!"
       ignore_errors: yes
       args:
         warn:
           true
       async: 45
       poll: 9
       register: gitlabCItoken

     - name: curlDisable WebUI SignIn
       shell: |
         curl -k -v --cacert /etc/gitlab/ssl/ca.crt \
           --cert /etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.crt \
           --key /etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.key \
           --request POST --header "PRIVATE-TOKEN: {{ gitlabAccessToken }}" \
           "{{ gitlabciUrl }}/api/v4/application/settings?signup_enabled=false&default_project_visibility=internal"
       ignore_errors: true
       args:
         warn: false

     - name: Ansible uriDisable WebUI SignIn
       uri:
         url: "{{ gitlabciUrl }}/api/v4/application/settings"
         method: POST
         validate_certs: no
         client_key: '/etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.key'
         client_cert: '/etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.crt'
         headers:
           Authorization: "Bearer {{ gitlabAccessToken }}"
           Content-Type: "application/json"
         body: { "signup_enabled": "false", "default_project_visibility": "internal" }
         body_format: json
         return_content: yes


     - name: curlCreate GitLab Group
       shell: |
         curl -k -v --cacert /etc/gitlab/ssl/ca.crt \
           --cert /etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.crt \
           --key /etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.key \
           --request POST --header "PRIVATE-TOKEN: {{ gitlabAccessToken }}" \
           --header "Content-Type: application/json" \
           --data '{ "name": "terraform", "path": "terragrunt", "description": "IaC  management Repo" }' \
           "https://usctvltstgitlbci01v.curbstone.com:443/api/v4/groups" | jq '.id'
       ignore_errors: true
       args:
        warn: false

         #
         # TODO
         # Alternative to looping over
         #   body: {{ item }}
         #
         # headers:
         #   PRIVATE_TOKEN: '{{ gitlabAccessToken }}'
         #   Content-Type: "application/json"
         # body: "{{ lookup('file','./terraform.json') }}"
         # body: { "name": "terragrunt", "path": "terragrunt", "description": "DevOps management Repo" }


     - name: Create GitLab Group
       uri:
         url:  "{{ gitlabciUrl }}/api/v4/groups"
         validate_certs: no
         client_key: '/etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.key'
         client_cert: '/etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.crt'
         method: POST
         headers:
           Authorization: "Bearer {{ gitlabAccessToken }}"
           Content-Type: "application/json"
         body: "{{ item }}"
         body_format: json
         status_code: [201, 200]
         return_content: yes
       with_items:
         - { "name": "terraform", "path": "terraform", "description": "IaC  management Repo" }
         - { "name": "devops", "path": "devops", "description": "DevOps management Repo" }

     #==========================================================================
     #
     # - name: Create GitLab Group
     #   uri:
     #     url: "{{ gitlabciUrl }}/api/v4/groups"
     #     validate_certs: no
     #     client_key: '/etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.key'
     #     client_cert: '/etc/gitlab/ssl/usctvltstgitlbci01v.curbstone.com.crt'
     #     method: POST
     #     headers:
     #       PRIVATE_TOKEN: '{{ gitlabAccessToken }}'
     #       Content-Type: "application/json"
     #     body: "{{ lookup('file','terraform.json') }}"
     #     body_format: json
     #     status_code: 204
     #     force_basic_auth: yes
     #     return_content: yes
     #
     #==========================================================================

     - name: Revoke Personal Access Token
       shell: |
         gitlab-rails runner "PersonalAccessToken.find_by_token('{{ gitlabAccessToken }}').revoke!"
       ignore_errors: yes
       args:
         warn:
           true
       async: 45
       poll: 9
